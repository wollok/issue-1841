import materias.*

describe "3 - baja" {
	
	const electronica = new Carrera()
	const sistemas = new Carrera()
	const pdep = new Materia(carrera = sistemas)
	const tc1 = new Materia(carrera = electronica, cupo = 1)
	const tc2 = new Materia(carrera = electronica, cupo = 2)
	const mediosEnlace = new Materia(carrera = electronica)
	const comunicaciones = new Materia (carrera = electronica, cupo = 10)
	const td1 = new Materia (carrera = electronica)
	const control = new Materia (carrera = electronica)	
	const pepe = new Estudiante(carrera = electronica)
	const nico = new Estudiante(carrera = electronica)
	const elias = new Estudiante(carrera = electronica)
	const juan = new Estudiante(carrera = electronica)
	
	fixture{
		td1.creditosRequeridos(5)
		tc1.creditosQueOtorga(10)	
		mediosEnlace.creditosRequeridos(20)	
		comunicaciones.correlativas().add(tc1)
		tc1.inscribirA(pepe)
		tc1.inscribirA(nico)
		tc2.inscribirA(pepe)
		tc2.inscribirA(nico)
		tc2.inscribirA(elias)
		tc2.inscribirA(juan)
		pepe.aprobo(tc1)
		control.correlativas().add(tc1)
		control.correlativas().add(tc2)
	}
	

	test "Dar de baja a una materia que tiene lista de espera por falta de cupo, el alumno que se dio de baja no debe estar y el primer alumno en lista de espera debe estar inscripto (y no figurar m√°s en lista de espera)." {
 		tc2.bajarA(pepe)
		assert.that(tc2.inscriptos() == [nico, elias] && tc2.listaDeEspera() == [juan])
 	}
}